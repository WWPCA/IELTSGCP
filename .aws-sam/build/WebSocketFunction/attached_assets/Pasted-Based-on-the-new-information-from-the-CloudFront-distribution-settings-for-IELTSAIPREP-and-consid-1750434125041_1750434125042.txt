Based on the new information from the CloudFront distribution settings for `IELTSAIPREP`, and considering the earlier "Forbidden" error when accessing `ielsairrep.com`, it’s clear you’re using CloudFront with Route 53 to route your domain. The current setup shows a successfully updated distribution, but the "Forbidden" error suggests misconfigurations or access issues. Below are the steps to troubleshoot and ensure your website loads correctly:

---

### **Analysis of Current Setup**
- **Distribution Details**:
  - **Name**: `IELTSAIPREP`
  - **Distribution Domain Name**: `d2c3y7f9d0g3i.cloudfront.net`
  - **Alternate Domain Names**: `ielsairrep.com`, `www.ielsairrep.com` (listed but may need verification).
  - **Origin**: Not fully visible, but assumed to be an S3 bucket, EC2 instance, or custom origin.
  - **SSL Certificate**: Custom SSL certificate is selected, which aligns with your active SSL.
  - **Security Policy**: TLSv1.2_2021, ensuring secure HTTPS.
  - **Default Root Object**: Not set (blank), which could cause issues if the origin expects a specific index file.
  - **Route Domains to CloudFront**: Button is available but not confirmed as executed.
  - **Logging**: Standard and cookie logging are off.
- **Issue**: The "Forbidden" error (HTTP 403) typically indicates that CloudFront or the origin is denying access, likely due to missing permissions, incorrect origin settings, or an unset default root object.

---

### **Steps to Ensure the Website Loads**

1. **Verify and Route Domains to CloudFront**
   - The "Route domains to CloudFront" button suggests the DNS records in Route 53 might not yet be fully configured to point to the CloudFront distribution.
   - **Action**:
     - Click "Route domains to CloudFront" in the CloudFront console. This will update Route 53 with an alias record pointing `ielsairrep.com` and `www.ielsairrep.com` to `d2c3y7f9d0g3i.cloudfront.net`.
     - If already done, verify the Route 53 hosted zone:
       - Go to Route 53 > Hosted Zones > `ielsairrep.com`.
       - Ensure an alias record exists for `ielsairrep.com` and `www.ielsairrep.com` pointing to the CloudFront distribution.
       - If missing, create an alias record:
         - Record Type: A
         - Alias: Yes
         - Alias Target: Select `d2c3y7f9d0g3i.cloudfront.net` from the dropdown.
       - Save and wait for DNS propagation (up to 48 hours, typically faster).

2. **Set the Default Root Object**
   - The blank "Default root object" field means CloudFront doesn’t know which file to serve when a user visits `ielsairrep.com` (e.g., `index.html`).
   - **Action**:
     - In the CloudFront console, under the "General" tab, edit the distribution.
     - Set "Default Root Object" to `index.html` (or the appropriate index file for your origin, e.g., `index.htm`, `index.php`).
     - Save changes and wait for the distribution to update (15-30 minutes).

3. **Check Origin Configuration**
   - The "Forbidden" error often occurs if the origin (e.g., S3 bucket, EC2) denies access to CloudFront.
   - **For S3 Origin**:
     - Go to the S3 console and locate the bucket used as the origin.
     - Ensure the bucket is configured for static website hosting (Properties > Static website hosting > Enable).
     - Check permissions:
       - If using an Origin Access Identity (OAI) or Origin Access Control (OAC):
         - Verify the OAI/OAC is attached to the CloudFront distribution (under "Origins" tab).
         - Update the bucket policy to allow CloudFront access. Example policy:
           ```json
           {
             "Version": "2012-10-17",
             "Statement": [
               {
                 "Effect": "Allow",
                 "Principal": {
                   "AWS": "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity <OAI-ID>"
                 },
                 "Action": "s3:GetObject",
                 "Resource": "arn:aws:s3:::your-bucket-name/*"
               }
             ]
           }
           ```
       - If public access is intended, ensure the bucket policy allows `s3:GetObject` for `"Principal": "*"` and block public access is disabled.
   - **For EC2 or Custom Origin**:
     - Ensure the origin server (e.g., EC2) allows inbound traffic from CloudFront IPs on port 80/443 (check security group).
     - Verify the web server (e.g., Apache, Nginx) is running and serving content.
   - **Action**: Correct origin settings based on your setup. Test direct access to the origin (e.g., S3 endpoint or EC2 IP) to confirm content is available.

4. **Validate SSL Certificate**
   - Your custom SSL certificate is in use, but a misconfiguration could cause access issues.
   - **Action**:
     - In the CloudFront "Security" tab, ensure the certificate covers `ielsairrep.com` and `www.ielsairrep.com`.
     - Use SSL Labs (https://www.ssllabs.com/ssltest/) to test `https://ielsairrep.com`. Fix any errors (e.g., mismatched domain, expired certificate) by re-uploading via AWS Certificate Manager.

5. **Test CloudFront Behavior**
   - The "Behaviors" tab defines how CloudFront handles requests. A default behavior might be restricting access.
   - **Action**:
     - Go to the "Behaviors" tab and edit the default behavior (*).
     - Ensure "Viewer Protocol Policy" is set to "Redirect HTTP to HTTPS" (since SSL is active).
     - Check "Allowed HTTP Methods" (e.g., GET, HEAD, OPTIONS) and ensure they match your needs.
     - Save changes and wait for deployment.

6. **Enable Logging for Debugging**
   - Logging is currently off, which limits visibility into errors.
   - **Action**:
     - In the "Logging" tab, enable standard logging:
       - Select an S3 bucket to store logs.
       - Save and wait for logs to generate (may take a few hours).
     - Check logs for 403 errors and their causes (e.g., missing files, access denied).

7. **Clear Cache and Test**
   - Cached 403 responses or misconfigurations might persist.
   - **Action**:
     - In the CloudFront console, go to "Invalidations" and create an invalidation for `/*` to clear the cache.
     - Clear your browser cache or use an incognito window.
     - Test `https://ielsairrep.com` and `https://www.ielsairrep.com`.

8. **Re-enable WAF (Optional but Recommended)**
   - Since WAF restrictions were removed, re-adding WAF on CloudFront can prevent future issues and provide security.
   - **Action**:
     - In the AWS WAF console, create a WebACL with managed rules (e.g., SQL injection, XSS).
     - Associate it with the CloudFront distribution in the "Security" tab.
     - Test in "monitor" mode to avoid blocking legitimate traffic.

---

### **Verification**
- After each step, test the website (`https://ielsairrep.com`) and check for the "Forbidden" error.
- If the issue persists, note any new error messages or behaviors and share them for further assistance.

### **Likely Fix**
The most common fixes based on your setup are:
- Setting the "Default Root Object" to `index.html`.
- Ensuring the Route 53 alias record correctly points to the CloudFront distribution.
- Configuring origin access (especially for S3).

Start with steps 1, 2, and 3, as they address the most likely causes. Let me know the outcome or provide additional details (e.g., origin type, error logs) if needed!