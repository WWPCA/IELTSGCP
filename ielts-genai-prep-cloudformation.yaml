AWSTemplateFormatVersion: '2010-09-09'
Description: 'IELTS GenAI Prep - Complete AWS Infrastructure with Route 53, Lambda, API Gateway, and Custom Domain'

Parameters:
  DomainName:
    Type: String
    Default: ieltsaiprep.com
    Description: The domain name for the IELTS GenAI Prep application
    
  Environment:
    Type: String
    Default: production
    AllowedValues:
      - production
      - staging
      - development
    Description: Environment name
    
  LambdaS3Bucket:
    Type: String
    Description: S3 bucket containing the Lambda deployment package
    Default: ielts-genai-prep-deployments
    
  LambdaS3Key:
    Type: String
    Description: S3 key for the Lambda deployment package
    Default: lambda/ielts-genai-prep-production.zip

Resources:
  # Route 53 Hosted Zone
  HostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: !Ref DomainName
      HostedZoneConfig:
        Comment: !Sub 'IELTS GenAI Prep ${Environment} environment hosted zone'
      HostedZoneTags:
        - Key: Project
          Value: IELTSGenAIPrep
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  # SSL Certificate
  SSLCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
      SubjectAlternativeNames:
        - !Sub 'www.${DomainName}'
        - !Sub '*.${DomainName}'
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: !Ref DomainName
          HostedZoneId: !Ref HostedZone
        - DomainName: !Sub 'www.${DomainName}'
          HostedZoneId: !Ref HostedZone
      Tags:
        - Key: Project
          Value: IELTSGenAIPrep
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  # DynamoDB Tables
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'ielts-genai-prep-users-${Environment}'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: email
          AttributeType: S
        - AttributeName: user_id
          AttributeType: S
      KeySchema:
        - AttributeName: email
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: user-id-index
          KeySchema:
            - AttributeName: user_id
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: Project
          Value: IELTSGenAIPrep
        - Key: Environment
          Value: !Ref Environment

  AssessmentRubricsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'ielts-genai-prep-assessment-rubrics-${Environment}'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: assessment_type
          AttributeType: S
      KeySchema:
        - AttributeName: assessment_type
          KeyType: HASH
      Tags:
        - Key: Project
          Value: IELTSGenAIPrep
        - Key: Environment
          Value: !Ref Environment

  AssessmentResultsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'ielts-genai-prep-assessment-results-${Environment}'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: result_id
          AttributeType: S
        - AttributeName: user_email
          AttributeType: S
        - AttributeName: created_at
          AttributeType: S
      KeySchema:
        - AttributeName: result_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: user-email-index
          KeySchema:
            - AttributeName: user_email
              KeyType: HASH
            - AttributeName: created_at
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      Tags:
        - Key: Project
          Value: IELTSGenAIPrep
        - Key: Environment
          Value: !Ref Environment

  AuthTokensTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'ielts-genai-prep-auth-tokens-${Environment}'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: token
          AttributeType: S
      KeySchema:
        - AttributeName: token
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: expires_at
        Enabled: true
      Tags:
        - Key: Project
          Value: IELTSGenAIPrep
        - Key: Environment
          Value: !Ref Environment

  # IAM Role for Lambda
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'IELTSGenAIPrep-Lambda-Role-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource:
                  - !GetAtt UsersTable.Arn
                  - !GetAtt AssessmentRubricsTable.Arn
                  - !GetAtt AssessmentResultsTable.Arn
                  - !GetAtt AuthTokensTable.Arn
                  - !Sub '${UsersTable.Arn}/index/*'
                  - !Sub '${AssessmentResultsTable.Arn}/index/*'
        - PolicyName: BedrockAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - bedrock:InvokeModel
                  - bedrock:InvokeModelWithResponseStream
                Resource:
                  - arn:aws:bedrock:us-east-1::foundation-model/amazon.nova-micro-v1:0
                  - arn:aws:bedrock:us-east-1::foundation-model/amazon.nova-lite-v1:0
                  - arn:aws:bedrock:us-east-1::foundation-model/amazon.nova-pro-v1:0
        - PolicyName: CloudWatchLogs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*'
      Tags:
        - Key: Project
          Value: IELTSGenAIPrep
        - Key: Environment
          Value: !Ref Environment

  # Lambda Function
  IELTSGenAIPrepLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub 'ielts-genai-prep-${Environment}'
      Runtime: python3.11
      Handler: app.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref LambdaS3Bucket
        S3Key: !Ref LambdaS3Key
      Timeout: 900
      MemorySize: 1024
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          USERS_TABLE: !Ref UsersTable
          ASSESSMENT_RUBRICS_TABLE: !Ref AssessmentRubricsTable
          ASSESSMENT_RESULTS_TABLE: !Ref AssessmentResultsTable
          AUTH_TOKENS_TABLE: !Ref AuthTokensTable
          DOMAIN_NAME: !Ref DomainName
          AWS_REGION: !Ref AWS::Region
      Tags:
        - Key: Project
          Value: IELTSGenAIPrep
        - Key: Environment
          Value: !Ref Environment

  # Lambda Permission for API Gateway
  LambdaApiGatewayPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref IELTSGenAIPrepLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub '${ApiGateway}/*/*'

  # API Gateway
  ApiGateway:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Sub 'ielts-genai-prep-api-${Environment}'
      Description: IELTS GenAI Prep API Gateway
      ProtocolType: HTTP
      CorsConfiguration:
        AllowCredentials: true
        AllowHeaders:
          - '*'
        AllowMethods:
          - '*'
        AllowOrigins:
          - !Sub 'https://${DomainName}'
          - !Sub 'https://www.${DomainName}'
        ExposeHeaders:
          - '*'
        MaxAge: 86400
      Tags:
        Project: IELTSGenAIPrep
        Environment: !Ref Environment

  # API Gateway Stage
  ApiGatewayStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref ApiGateway
      StageName: prod
      Description: Production stage for IELTS GenAI Prep API
      AutoDeploy: true
      DefaultRouteSettings:
        ThrottlingBurstLimit: 1000
        ThrottlingRateLimit: 500
      Tags:
        Project: IELTSGenAIPrep
        Environment: !Ref Environment

  # API Gateway Integration
  LambdaIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ApiGateway
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${IELTSGenAIPrepLambda.Arn}/invocations'
      PayloadFormatVersion: '2.0'
      TimeoutInMillis: 30000

  # API Gateway Routes
  DefaultRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ApiGateway
      RouteKey: '$default'
      Target: !Sub 'integrations/${LambdaIntegration}'

  # Custom Domain
  CustomDomain:
    Type: AWS::ApiGatewayV2::DomainName
    Properties:
      DomainName: !Ref DomainName
      DomainNameConfigurations:
        - CertificateArn: !Ref SSLCertificate
          EndpointType: REGIONAL
          SecurityPolicy: TLS_1_2
      Tags:
        Project: IELTSGenAIPrep
        Environment: !Ref Environment

  # API Mapping
  ApiMapping:
    Type: AWS::ApiGatewayV2::ApiMapping
    Properties:
      DomainName: !Ref CustomDomain
      ApiId: !Ref ApiGateway
      Stage: !Ref ApiGatewayStage

  # Route 53 Records
  ApexDomainRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZone
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt CustomDomain.RegionalDomainName
        HostedZoneId: !GetAtt CustomDomain.RegionalHostedZoneId
        EvaluateTargetHealth: true

  WWWDomainRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZone
      Name: !Sub 'www.${DomainName}'
      Type: A
      AliasTarget:
        DNSName: !GetAtt CustomDomain.RegionalDomainName
        HostedZoneId: !GetAtt CustomDomain.RegionalHostedZoneId
        EvaluateTargetHealth: true

  # Health Check
  HealthCheck:
    Type: AWS::Route53::HealthCheck
    Properties:
      Type: HTTPS
      ResourcePath: /health
      FullyQualifiedDomainName: !Ref DomainName
      Port: 443
      RequestInterval: 30
      FailureThreshold: 3
      Tags:
        - Key: Project
          Value: IELTSGenAIPrep
        - Key: Environment
          Value: !Ref Environment

  # CloudWatch Log Group
  ApiGatewayLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/apigateway/ielts-genai-prep-${Environment}'
      RetentionInDays: 30
      Tags:
        - Key: Project
          Value: IELTSGenAIPrep
        - Key: Environment
          Value: !Ref Environment

  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/ielts-genai-prep-${Environment}'
      RetentionInDays: 30
      Tags:
        - Key: Project
          Value: IELTSGenAIPrep
        - Key: Environment
          Value: !Ref Environment

Outputs:
  HostedZoneId:
    Description: Route 53 Hosted Zone ID
    Value: !Ref HostedZone
    Export:
      Name: !Sub '${AWS::StackName}-HostedZoneId'

  HostedZoneNameServers:
    Description: Route 53 Name Servers (update these at Namecheap)
    Value: !Join [', ', !GetAtt HostedZone.NameServers]
    Export:
      Name: !Sub '${AWS::StackName}-NameServers'

  SSLCertificateArn:
    Description: SSL Certificate ARN
    Value: !Ref SSLCertificate
    Export:
      Name: !Sub '${AWS::StackName}-SSLCertificate'

  ApiGatewayUrl:
    Description: API Gateway URL
    Value: !Sub 'https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod'
    Export:
      Name: !Sub '${AWS::StackName}-ApiGatewayUrl'

  CustomDomainUrl:
    Description: Custom Domain URL
    Value: !Sub 'https://${DomainName}'
    Export:
      Name: !Sub '${AWS::StackName}-CustomDomainUrl'

  LambdaFunctionArn:
    Description: Lambda Function ARN
    Value: !GetAtt IELTSGenAIPrepLambda.Arn
    Export:
      Name: !Sub '${AWS::StackName}-LambdaArn'

  HealthCheckId:
    Description: Route 53 Health Check ID
    Value: !Ref HealthCheck
    Export:
      Name: !Sub '${AWS::StackName}-HealthCheck'

  UsersTableName:
    Description: DynamoDB Users Table Name
    Value: !Ref UsersTable
    Export:
      Name: !Sub '${AWS::StackName}-UsersTable'

  AssessmentRubricsTableName:
    Description: DynamoDB Assessment Rubrics Table Name
    Value: !Ref AssessmentRubricsTable
    Export:
      Name: !Sub '${AWS::StackName}-AssessmentRubricsTable'

  AssessmentResultsTableName:
    Description: DynamoDB Assessment Results Table Name
    Value: !Ref AssessmentResultsTable
    Export:
      Name: !Sub '${AWS::StackName}-AssessmentResultsTable'

  AuthTokensTableName:
    Description: DynamoDB Auth Tokens Table Name
    Value: !Ref AuthTokensTable
    Export:
      Name: !Sub '${AWS::StackName}-AuthTokensTable'